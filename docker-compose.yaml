version: "3.9"

services:
  ################################################
  #  RABBITMQ Service (with enhanced healthcheck)
  ################################################
  rabbitmq:
    image: "rabbitmq:3.9-management"
    container_name: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # RabbitMQ Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10 # Increased retries

  ################################################
  #  PLATFORM SERVICE (your .NET app)
  ################################################
  platformservice:
    container_name: "platformservice"
    environment:
      DEPLOYMENT_MODE: "DOCKER"
    build:
      context: ./PlatformService
      dockerfile: Dockerfile
    ports:
      - "5012:5012" # Host 5012 -> Container 5012
    depends_on:
      rabbitmq:
        condition: service_healthy

  ################################################
  #  PLATFORM SERVICE - DAPR SIDECAR
  ################################################
  platformservice-dapr:
    image: "daprio/daprd:latest"
    container_name: "platformservice-dapr"
    environment:
      DEPLOYMENT_MODE: "DOCKER"
    depends_on:
      rabbitmq:
        condition: service_healthy
      platformservice:
        condition: service_started
    command: >
      /daprd
      --app-id platformservice
      --app-port 5012
      --app-channel-address platformservice
      --dapr-http-port 3601
      --dapr-grpc-port 60001
      --resources-path /components
    ports:
      - "3601:3601" # Dapr HTTP
      - "60001:60001" # Dapr gRPC
    volumes:
      - ./dapr/components/docker:/components
    restart: unless-stopped # Ensures Dapr sidecar restarts on failure

  ################################################
  #  COMMANDS SERVICE (your .NET app)
  ################################################
  commandsservice:
    container_name: "commandsservice"
    environment:
      DEPLOYMENT_MODE: "DOCKER"
    build:
      context: ./CommandsService
      dockerfile: Dockerfile
    ports:
      - "5230:5230" # Host 5230 -> Container 5230
    depends_on:
      rabbitmq:
        condition: service_healthy

  ################################################
  #  COMMANDS SERVICE - DAPR SIDECAR
  ################################################
  commandsservice-dapr:
    image: "daprio/daprd:latest"
    container_name: "commandsservice-dapr"
    environment:
      DEPLOYMENT_MODE: "DOCKER"
    depends_on:
      rabbitmq:
        condition: service_healthy
      commandsservice:
        condition: service_started
    command: >
      /daprd
      --app-id commandsservice
      --app-port 5230
      --app-channel-address commandsservice
      --dapr-http-port 3602
      --dapr-grpc-port 60002
      --resources-path /components
    ports:
      - "3602:3602" # Dapr HTTP
      - "60002:60002" # Dapr gRPC
    volumes:
      - ./dapr/components/docker:/components
    restart: unless-stopped # Ensures Dapr sidecar restarts on failure

volumes:
  rabbitmq_data:
